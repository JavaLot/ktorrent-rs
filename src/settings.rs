//! # D-Bus interface proxy for: `org.ktorrent.settings`
//!
//! This code was generated by `zbus-xmlgen` `5.1.0` from D-Bus introspection data.
//! Source: `Interface '/settings' from service 'org.kde.ktorrent' on system bus`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the [Writing a client proxy] section of the zbus
//! documentation.
//!
//! This type implements the [D-Bus standard interfaces], (`org.freedesktop.DBus.*`) for which the
//! following zbus API can be used:
//!
//! * [`zbus::fdo::PropertiesProxy`]
//! * [`zbus::fdo::IntrospectableProxy`]
//! * [`zbus::fdo::PeerProxy`]
//!
//! Consequently `zbus-xmlgen` did not generate code for the above interfaces.
//!
//! [Writing a client proxy]: https://dbus2.github.io/zbus/client.html
//! [D-Bus standard interfaces]: https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces,
use zbus::proxy;
#[proxy(
    interface = "org.ktorrent.settings",
    default_service = "org.kde.ktorrent",
    default_path = "/settings"
)]
pub trait settings {
    /// allowUnencryptedConnections method
    #[zbus(name = "allowUnencryptedConnections")]
    fn allow_unencrypted_connections(&self) -> zbus::Result<bool>;

    /// alwaysMinimizeToSystemTray method
    #[zbus(name = "alwaysMinimizeToSystemTray")]
    fn always_minimize_to_system_tray(&self) -> zbus::Result<bool>;

    /// apply method
    #[zbus(name = "apply")]
    fn apply(&self) -> zbus::Result<()>;

    /// autoRenameSingleFileTorrents method
    #[zbus(name = "autoRenameSingleFileTorrents")]
    fn auto_rename_single_file_torrents(&self) -> zbus::Result<bool>;

    /// checkWhenFinished method
    #[zbus(name = "checkWhenFinished")]
    fn check_when_finished(&self) -> zbus::Result<bool>;

    /// completedDir method
    #[zbus(name = "completedDir")]
    fn completed_dir(&self) -> zbus::Result<String>;

    /// cpuUsage method
    #[zbus(name = "cpuUsage")]
    fn cpu_usage(&self) -> zbus::Result<i32>;

    /// customIP method
    #[zbus(name = "customIP")]
    fn custom_ip(&self) -> zbus::Result<String>;

    /// decreasePriorityOfStalledTorrents method
    #[zbus(name = "decreasePriorityOfStalledTorrents")]
    fn decrease_priority_of_stalled_torrents(&self) -> zbus::Result<bool>;

    /// dhtPort method
    #[zbus(name = "dhtPort")]
    fn dht_port(&self) -> zbus::Result<i32>;

    /// dhtSupport method
    #[zbus(name = "dhtSupport")]
    fn dht_support(&self) -> zbus::Result<bool>;

    /// diskPrealloc method
    #[zbus(name = "diskPrealloc")]
    fn disk_prealloc(&self) -> zbus::Result<bool>;

    /// downloadBandwidth method
    #[zbus(name = "downloadBandwidth")]
    fn download_bandwidth(&self) -> zbus::Result<i32>;

    /// dscp method
    #[zbus(name = "dscp")]
    fn dscp(&self) -> zbus::Result<i32>;

    /// fullDiskPrealloc method
    #[zbus(name = "fullDiskPrealloc")]
    fn full_disk_prealloc(&self) -> zbus::Result<bool>;

    /// greenRatio method
    #[zbus(name = "greenRatio")]
    fn green_ratio(&self) -> zbus::Result<f64>;

    /// guiUpdateInterval method
    #[zbus(name = "guiUpdateInterval")]
    fn gui_update_interval(&self) -> zbus::Result<i32>;

    /// httpProxy method
    #[zbus(name = "httpProxy")]
    fn http_proxy(&self) -> zbus::Result<String>;

    /// httpProxyPort method
    #[zbus(name = "httpProxyPort")]
    fn http_proxy_port(&self) -> zbus::Result<i32>;

    /// keepSeeding method
    #[zbus(name = "keepSeeding")]
    fn keep_seeding(&self) -> zbus::Result<bool>;

    /// lastSaveDir method
    #[zbus(name = "lastSaveDir")]
    fn last_save_dir(&self) -> zbus::Result<String>;

    /// lookUpHostnameOfPeers method
    #[zbus(name = "lookUpHostnameOfPeers")]
    fn look_up_hostname_of_peers(&self) -> zbus::Result<bool>;

    /// manuallyControlTorrents method
    #[zbus(name = "manuallyControlTorrents")]
    fn manually_control_torrents(&self) -> zbus::Result<bool>;

    /// maxConnectingSockets method
    #[zbus(name = "maxConnectingSockets")]
    fn max_connecting_sockets(&self) -> zbus::Result<i32>;

    /// maxConnections method
    #[zbus(name = "maxConnections")]
    fn max_connections(&self) -> zbus::Result<i32>;

    /// maxDownloadRate method
    #[zbus(name = "maxDownloadRate")]
    fn max_download_rate(&self) -> zbus::Result<i32>;

    /// maxDownloads method
    #[zbus(name = "maxDownloads")]
    fn max_downloads(&self) -> zbus::Result<i32>;

    /// maxRatio method
    #[zbus(name = "maxRatio")]
    fn max_ratio(&self) -> zbus::Result<f64>;

    /// maxSeedTime method
    #[zbus(name = "maxSeedTime")]
    fn max_seed_time(&self) -> zbus::Result<f64>;

    /// maxSeeds method
    #[zbus(name = "maxSeeds")]
    fn max_seeds(&self) -> zbus::Result<i32>;

    /// maxTotalConnections method
    #[zbus(name = "maxTotalConnections")]
    fn max_total_connections(&self) -> zbus::Result<i32>;

    /// maxUploadRate method
    #[zbus(name = "maxUploadRate")]
    fn max_upload_rate(&self) -> zbus::Result<i32>;

    /// minDiskSpace method
    #[zbus(name = "minDiskSpace")]
    fn min_disk_space(&self) -> zbus::Result<i32>;

    /// networkInterface method
    #[zbus(name = "networkInterface")]
    fn network_interface(&self) -> zbus::Result<String>;

    /// numMagnetDownloadingSlots method
    #[zbus(name = "numMagnetDownloadingSlots")]
    fn num_magnet_downloading_slots(&self) -> zbus::Result<i32>;

    /// numUploadSlots method
    #[zbus(name = "numUploadSlots")]
    fn num_upload_slots(&self) -> zbus::Result<i32>;

    /// onlyUseUtp method
    #[zbus(name = "onlyUseUtp")]
    fn only_use_utp(&self) -> zbus::Result<bool>;

    /// openAllTorrentsSilently method
    #[zbus(name = "openAllTorrentsSilently")]
    fn open_all_torrents_silently(&self) -> zbus::Result<bool>;

    /// openMultipleTorrentsSilently method
    #[zbus(name = "openMultipleTorrentsSilently")]
    fn open_multiple_torrents_silently(&self) -> zbus::Result<bool>;

    /// pexEnabled method
    #[zbus(name = "pexEnabled")]
    fn pex_enabled(&self) -> zbus::Result<bool>;

    /// port method
    #[zbus(name = "port")]
    fn port(&self) -> zbus::Result<i32>;

    /// previewSizeAudio method
    #[zbus(name = "previewSizeAudio")]
    fn preview_size_audio(&self) -> zbus::Result<i32>;

    /// previewSizeVideo method
    #[zbus(name = "previewSizeVideo")]
    fn preview_size_video(&self) -> zbus::Result<i32>;

    /// primaryTransportProtocol method
    #[zbus(name = "primaryTransportProtocol")]
    fn primary_transport_protocol(&self) -> zbus::Result<i32>;

    /// requeueMagnets method
    #[zbus(name = "requeueMagnets")]
    fn requeue_magnets(&self) -> zbus::Result<bool>;

    /// requeueMagnetsTime method
    #[zbus(name = "requeueMagnetsTime")]
    fn requeue_magnets_time(&self) -> zbus::Result<i32>;

    /// saveDir method
    #[zbus(name = "saveDir")]
    fn save_dir(&self) -> zbus::Result<String>;

    /// setAllowUnencryptedConnections method
    #[zbus(name = "setAllowUnencryptedConnections")]
    fn set_allow_unencrypted_connections(&self, val: bool) -> zbus::Result<()>;

    /// setAlwaysMinimizeToSystemTray method
    #[zbus(name = "setAlwaysMinimizeToSystemTray")]
    fn set_always_minimize_to_system_tray(&self, val: bool) -> zbus::Result<()>;

    /// setAutoRenameSingleFileTorrents method
    #[zbus(name = "setAutoRenameSingleFileTorrents")]
    fn set_auto_rename_single_file_torrents(&self, val: bool) -> zbus::Result<()>;

    /// setCheckWhenFinished method
    #[zbus(name = "setCheckWhenFinished")]
    fn set_check_when_finished(&self, val: bool) -> zbus::Result<()>;

    /// setCompletedDir method
    #[zbus(name = "setCompletedDir")]
    fn set_completed_dir(&self, val: &str) -> zbus::Result<()>;

    /// setCpuUsage method
    #[zbus(name = "setCpuUsage")]
    fn set_cpu_usage(&self, val: i32) -> zbus::Result<()>;

    /// setCustomIP method
    #[zbus(name = "setCustomIP")]
    fn set_custom_ip(&self, val: &str) -> zbus::Result<()>;

    /// setDecreasePriorityOfStalledTorrents method
    #[zbus(name = "setDecreasePriorityOfStalledTorrents")]
    fn set_decrease_priority_of_stalled_torrents(&self, val: bool) -> zbus::Result<()>;

    /// setDhtPort method
    #[zbus(name = "setDhtPort")]
    fn set_dht_port(&self, val: i32) -> zbus::Result<()>;

    /// setDhtSupport method
    #[zbus(name = "setDhtSupport")]
    fn set_dht_support(&self, val: bool) -> zbus::Result<()>;

    /// setDiskPrealloc method
    #[zbus(name = "setDiskPrealloc")]
    fn set_disk_prealloc(&self, val: bool) -> zbus::Result<()>;

    /// setDownloadBandwidth method
    #[zbus(name = "setDownloadBandwidth")]
    fn set_download_bandwidth(&self, val: i32) -> zbus::Result<()>;

    /// setDscp method
    #[zbus(name = "setDscp")]
    fn set_dscp(&self, val: i32) -> zbus::Result<()>;

    /// setFullDiskPrealloc method
    #[zbus(name = "setFullDiskPrealloc")]
    fn set_full_disk_prealloc(&self, val: bool) -> zbus::Result<()>;

    /// setGreenRatio method
    #[zbus(name = "setGreenRatio")]
    fn set_green_ratio(&self, val: f64) -> zbus::Result<()>;

    /// setGuiUpdateInterval method
    #[zbus(name = "setGuiUpdateInterval")]
    fn set_gui_update_interval(&self, val: i32) -> zbus::Result<()>;

    /// setHttpProxy method
    #[zbus(name = "setHttpProxy")]
    fn set_http_proxy(&self, val: &str) -> zbus::Result<()>;

    /// setHttpProxyPort method
    #[zbus(name = "setHttpProxyPort")]
    fn set_http_proxy_port(&self, val: i32) -> zbus::Result<()>;

    /// setKeepSeeding method
    #[zbus(name = "setKeepSeeding")]
    fn set_keep_seeding(&self, val: bool) -> zbus::Result<()>;

    /// setLastSaveDir method
    #[zbus(name = "setLastSaveDir")]
    fn set_last_save_dir(&self, val: &str) -> zbus::Result<()>;

    /// setLookUpHostnameOfPeers method
    #[zbus(name = "setLookUpHostnameOfPeers")]
    fn set_look_up_hostname_of_peers(&self, val: bool) -> zbus::Result<()>;

    /// setManuallyControlTorrents method
    #[zbus(name = "setManuallyControlTorrents")]
    fn set_manually_control_torrents(&self, val: bool) -> zbus::Result<()>;

    /// setMaxConnectingSockets method
    #[zbus(name = "setMaxConnectingSockets")]
    fn set_max_connecting_sockets(&self, val: i32) -> zbus::Result<()>;

    /// setMaxConnections method
    #[zbus(name = "setMaxConnections")]
    fn set_max_connections(&self, val: i32) -> zbus::Result<()>;

    /// setMaxDownloadRate method
    #[zbus(name = "setMaxDownloadRate")]
    fn set_max_download_rate(&self, val: i32) -> zbus::Result<()>;

    /// setMaxDownloads method
    #[zbus(name = "setMaxDownloads")]
    fn set_max_downloads(&self, val: i32) -> zbus::Result<()>;

    /// setMaxRatio method
    #[zbus(name = "setMaxRatio")]
    fn set_max_ratio(&self, val: f64) -> zbus::Result<()>;

    /// setMaxSeedTime method
    #[zbus(name = "setMaxSeedTime")]
    fn set_max_seed_time(&self, val: f64) -> zbus::Result<()>;

    /// setMaxSeeds method
    #[zbus(name = "setMaxSeeds")]
    fn set_max_seeds(&self, val: i32) -> zbus::Result<()>;

    /// setMaxTotalConnections method
    #[zbus(name = "setMaxTotalConnections")]
    fn set_max_total_connections(&self, val: i32) -> zbus::Result<()>;

    /// setMaxUploadRate method
    #[zbus(name = "setMaxUploadRate")]
    fn set_max_upload_rate(&self, val: i32) -> zbus::Result<()>;

    /// setMinDiskSpace method
    #[zbus(name = "setMinDiskSpace")]
    fn set_min_disk_space(&self, val: i32) -> zbus::Result<()>;

    /// setNetworkInterface method
    #[zbus(name = "setNetworkInterface")]
    fn set_network_interface(&self, val: &str) -> zbus::Result<()>;

    /// setNumMagnetDownloadingSlots method
    #[zbus(name = "setNumMagnetDownloadingSlots")]
    fn set_num_magnet_downloading_slots(&self, val: i32) -> zbus::Result<()>;

    /// setNumUploadSlots method
    #[zbus(name = "setNumUploadSlots")]
    fn set_num_upload_slots(&self, val: i32) -> zbus::Result<()>;

    /// setOnlyUseUtp method
    #[zbus(name = "setOnlyUseUtp")]
    fn set_only_use_utp(&self, val: bool) -> zbus::Result<()>;

    /// setOpenAllTorrentsSilently method
    #[zbus(name = "setOpenAllTorrentsSilently")]
    fn set_open_all_torrents_silently(&self, val: bool) -> zbus::Result<()>;

    /// setOpenMultipleTorrentsSilently method
    #[zbus(name = "setOpenMultipleTorrentsSilently")]
    fn set_open_multiple_torrents_silently(&self, val: bool) -> zbus::Result<()>;

    /// setPexEnabled method
    #[zbus(name = "setPexEnabled")]
    fn set_pex_enabled(&self, val: bool) -> zbus::Result<()>;

    /// setPort method
    #[zbus(name = "setPort")]
    fn set_port(&self, val: i32) -> zbus::Result<()>;

    /// setPreviewSizeAudio method
    #[zbus(name = "setPreviewSizeAudio")]
    fn set_preview_size_audio(&self, val: i32) -> zbus::Result<()>;

    /// setPreviewSizeVideo method
    #[zbus(name = "setPreviewSizeVideo")]
    fn set_preview_size_video(&self, val: i32) -> zbus::Result<()>;

    /// setPrimaryTransportProtocol method
    #[zbus(name = "setPrimaryTransportProtocol")]
    fn set_primary_transport_protocol(&self, val: i32) -> zbus::Result<()>;

    /// setRequeueMagnets method
    #[zbus(name = "setRequeueMagnets")]
    fn set_requeue_magnets(&self, val: bool) -> zbus::Result<()>;

    /// setRequeueMagnetsTime method
    #[zbus(name = "setRequeueMagnetsTime")]
    fn set_requeue_magnets_time(&self, val: i32) -> zbus::Result<()>;

    /// setSaveDir method
    #[zbus(name = "setSaveDir")]
    fn set_save_dir(&self, val: &str) -> zbus::Result<()>;

    /// setShowPopups method
    #[zbus(name = "setShowPopups")]
    fn set_show_popups(&self, val: bool) -> zbus::Result<()>;

    /// setShowSpeedBarInTrayIcon method
    #[zbus(name = "setShowSpeedBarInTrayIcon")]
    fn set_show_speed_bar_in_tray_icon(&self, val: bool) -> zbus::Result<()>;

    /// setShowSystemTrayIcon method
    #[zbus(name = "setShowSystemTrayIcon")]
    fn set_show_system_tray_icon(&self, val: bool) -> zbus::Result<()>;

    /// setShowTotalSpeedInTitle method
    #[zbus(name = "setShowTotalSpeedInTitle")]
    fn set_show_total_speed_in_title(&self, val: bool) -> zbus::Result<()>;

    /// setShownColumns method
    #[zbus(name = "setShownColumns")]
    fn set_shown_columns(&self, val: &[i32]) -> zbus::Result<()>;

    /// setSocksEnabled method
    #[zbus(name = "setSocksEnabled")]
    fn set_socks_enabled(&self, val: bool) -> zbus::Result<()>;

    /// setSocksPassword method
    #[zbus(name = "setSocksPassword")]
    fn set_socks_password(&self, val: &str) -> zbus::Result<()>;

    /// setSocksPort method
    #[zbus(name = "setSocksPort")]
    fn set_socks_port(&self, val: i32) -> zbus::Result<()>;

    /// setSocksProxy method
    #[zbus(name = "setSocksProxy")]
    fn set_socks_proxy(&self, val: &str) -> zbus::Result<()>;

    /// setSocksUsePassword method
    #[zbus(name = "setSocksUsePassword")]
    fn set_socks_use_password(&self, val: bool) -> zbus::Result<()>;

    /// setSocksUsername method
    #[zbus(name = "setSocksUsername")]
    fn set_socks_username(&self, val: &str) -> zbus::Result<()>;

    /// setSocksVersion method
    #[zbus(name = "setSocksVersion")]
    fn set_socks_version(&self, val: i32) -> zbus::Result<()>;

    /// setStallTimer method
    #[zbus(name = "setStallTimer")]
    fn set_stall_timer(&self, val: i32) -> zbus::Result<()>;

    /// setStartDownloadsOnLowDiskSpace method
    #[zbus(name = "setStartDownloadsOnLowDiskSpace")]
    fn set_start_downloads_on_low_disk_space(&self, val: i32) -> zbus::Result<()>;

    /// setSuppressSleep method
    #[zbus(name = "setSuppressSleep")]
    fn set_suppress_sleep(&self, val: bool) -> zbus::Result<()>;

    /// setTempDir method
    #[zbus(name = "setTempDir")]
    fn set_temp_dir(&self, val: &str) -> zbus::Result<()>;

    /// setTorrentCopyDir method
    #[zbus(name = "setTorrentCopyDir")]
    fn set_torrent_copy_dir(&self, val: &str) -> zbus::Result<()>;

    /// setTypeOfService method
    #[zbus(name = "setTypeOfService")]
    fn set_type_of_service(&self, val: i32) -> zbus::Result<()>;

    /// setUdpTrackerPort method
    #[zbus(name = "setUdpTrackerPort")]
    fn set_udp_tracker_port(&self, val: i32) -> zbus::Result<()>;

    /// setUploadBandwidth method
    #[zbus(name = "setUploadBandwidth")]
    fn set_upload_bandwidth(&self, val: i32) -> zbus::Result<()>;

    /// setUseCompletedDir method
    #[zbus(name = "setUseCompletedDir")]
    fn set_use_completed_dir(&self, val: bool) -> zbus::Result<()>;

    /// setUseCustomIP method
    #[zbus(name = "setUseCustomIP")]
    fn set_use_custom_ip(&self, val: bool) -> zbus::Result<()>;

    /// setUseEncryption method
    #[zbus(name = "setUseEncryption")]
    fn set_use_encryption(&self, val: bool) -> zbus::Result<()>;

    /// setUseKDEProxySettings method
    #[zbus(name = "setUseKDEProxySettings")]
    fn set_use_kdeproxy_settings(&self, val: bool) -> zbus::Result<()>;

    /// setUseProxyForTracker method
    #[zbus(name = "setUseProxyForTracker")]
    fn set_use_proxy_for_tracker(&self, val: bool) -> zbus::Result<()>;

    /// setUseProxyForWebSeeds method
    #[zbus(name = "setUseProxyForWebSeeds")]
    fn set_use_proxy_for_web_seeds(&self, val: bool) -> zbus::Result<()>;

    /// setUseSaveDir method
    #[zbus(name = "setUseSaveDir")]
    fn set_use_save_dir(&self, val: bool) -> zbus::Result<()>;

    /// setUseTorrentCopyDir method
    #[zbus(name = "setUseTorrentCopyDir")]
    fn set_use_torrent_copy_dir(&self, val: bool) -> zbus::Result<()>;

    /// setUtpEnabled method
    #[zbus(name = "setUtpEnabled")]
    fn set_utp_enabled(&self, val: bool) -> zbus::Result<()>;

    /// setWebseedsEnabled method
    #[zbus(name = "setWebseedsEnabled")]
    fn set_webseeds_enabled(&self, val: bool) -> zbus::Result<()>;

    /// showPopups method
    #[zbus(name = "showPopups")]
    fn show_popups(&self) -> zbus::Result<bool>;

    /// showSpeedBarInTrayIcon method
    #[zbus(name = "showSpeedBarInTrayIcon")]
    fn show_speed_bar_in_tray_icon(&self) -> zbus::Result<bool>;

    /// showSystemTrayIcon method
    #[zbus(name = "showSystemTrayIcon")]
    fn show_system_tray_icon(&self) -> zbus::Result<bool>;

    /// showTotalSpeedInTitle method
    #[zbus(name = "showTotalSpeedInTitle")]
    fn show_total_speed_in_title(&self) -> zbus::Result<bool>;

    /// shownColumns method
    #[zbus(name = "shownColumns")]
    fn shown_columns(&self) -> zbus::Result<Vec<i32>>;

    /// socksEnabled method
    #[zbus(name = "socksEnabled")]
    fn socks_enabled(&self) -> zbus::Result<bool>;

    /// socksPassword method
    #[zbus(name = "socksPassword")]
    fn socks_password(&self) -> zbus::Result<String>;

    /// socksPort method
    #[zbus(name = "socksPort")]
    fn socks_port(&self) -> zbus::Result<i32>;

    /// socksProxy method
    #[zbus(name = "socksProxy")]
    fn socks_proxy(&self) -> zbus::Result<String>;

    /// socksUsePassword method
    #[zbus(name = "socksUsePassword")]
    fn socks_use_password(&self) -> zbus::Result<bool>;

    /// socksUsername method
    #[zbus(name = "socksUsername")]
    fn socks_username(&self) -> zbus::Result<String>;

    /// socksVersion method
    #[zbus(name = "socksVersion")]
    fn socks_version(&self) -> zbus::Result<i32>;

    /// stallTimer method
    #[zbus(name = "stallTimer")]
    fn stall_timer(&self) -> zbus::Result<i32>;

    /// startDownloadsOnLowDiskSpace method
    #[zbus(name = "startDownloadsOnLowDiskSpace")]
    fn start_downloads_on_low_disk_space(&self) -> zbus::Result<i32>;

    /// suppressSleep method
    #[zbus(name = "suppressSleep")]
    fn suppress_sleep(&self) -> zbus::Result<bool>;

    /// tempDir method
    #[zbus(name = "tempDir")]
    fn temp_dir(&self) -> zbus::Result<String>;

    /// torrentCopyDir method
    #[zbus(name = "torrentCopyDir")]
    fn torrent_copy_dir(&self) -> zbus::Result<String>;

    /// typeOfService method
    #[zbus(name = "typeOfService")]
    fn type_of_service(&self) -> zbus::Result<i32>;

    /// udpTrackerPort method
    #[zbus(name = "udpTrackerPort")]
    fn udp_tracker_port(&self) -> zbus::Result<i32>;

    /// uploadBandwidth method
    #[zbus(name = "uploadBandwidth")]
    fn upload_bandwidth(&self) -> zbus::Result<i32>;

    /// useCompletedDir method
    #[zbus(name = "useCompletedDir")]
    fn use_completed_dir(&self) -> zbus::Result<bool>;

    /// useCustomIP method
    #[zbus(name = "useCustomIP")]
    fn use_custom_ip(&self) -> zbus::Result<bool>;

    /// useEncryption method
    #[zbus(name = "useEncryption")]
    fn use_encryption(&self) -> zbus::Result<bool>;

    /// useKDEProxySettings method
    #[zbus(name = "useKDEProxySettings")]
    fn use_kdeproxy_settings(&self) -> zbus::Result<bool>;

    /// useProxyForTracker method
    #[zbus(name = "useProxyForTracker")]
    fn use_proxy_for_tracker(&self) -> zbus::Result<bool>;

    /// useProxyForWebSeeds method
    #[zbus(name = "useProxyForWebSeeds")]
    fn use_proxy_for_web_seeds(&self) -> zbus::Result<bool>;

    /// useSaveDir method
    #[zbus(name = "useSaveDir")]
    fn use_save_dir(&self) -> zbus::Result<bool>;

    /// useTorrentCopyDir method
    #[zbus(name = "useTorrentCopyDir")]
    fn use_torrent_copy_dir(&self) -> zbus::Result<bool>;

    /// utpEnabled method
    #[zbus(name = "utpEnabled")]
    fn utp_enabled(&self) -> zbus::Result<bool>;

    /// webseedsEnabled method
    #[zbus(name = "webseedsEnabled")]
    fn webseeds_enabled(&self) -> zbus::Result<bool>;
}
