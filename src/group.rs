//! # D-Bus interface proxy for: `org.ktorrent.group`
//!
//! This code was generated by `zbus-xmlgen` `5.0.1` from D-Bus introspection data.
//! Source: `Interface '/group/Group' from service 'org.kde.ktorrent' on system bus`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the [Writing a client proxy] section of the zbus
//! documentation.
//!
//! This type implements the [D-Bus standard interfaces], (`org.freedesktop.DBus.*`) for which the
//! following zbus API can be used:
//!
//! * [`zbus::fdo::PropertiesProxy`]
//! * [`zbus::fdo::IntrospectableProxy`]
//! * [`zbus::fdo::PeerProxy`]
//!
//! Consequently, `zbus-xmlgen` did not generate code for the above interfaces.
//!
//! [Writing a client proxy]: https://dbus2.github.io/zbus/client.html
//! [D-Bus standard interfaces]: https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces,

use zbus::{Connection, Result, proxy};

impl GroupProxy<'_> {
    pub async fn new_from_path(
        group_path: zbus::zvariant::OwnedObjectPath,
        connection: &Connection,
    ) -> Result<GroupProxy<'_>> {
        GroupProxy::builder(connection)
            .path(group_path)?
            .build()
            .await
    }
}

#[proxy(
    default_service = "org.kde.ktorrent",
    default_path = "/group/Group",
    interface = "org.ktorrent.group"
)]
pub trait Group {
    /// defaultMoveOnCompletionLocation method
    #[zbus(name = "defaultMoveOnCompletionLocation")]
    fn default_move_on_completion_location(&self) -> Result<String>;

    /// defaultSaveLocation method
    #[zbus(name = "defaultSaveLocation")]
    fn default_save_location(&self) -> Result<String>;

    /// icon method
    #[zbus(name = "icon")]
    fn icon(&self) -> Result<String>;

    /// maxDownloadSpeed method
    #[zbus(name = "maxDownloadSpeed")]
    fn max_download_speed(&self) -> Result<u32>;

    /// maxSeedTime method
    #[zbus(name = "maxSeedTime")]
    fn max_seed_time(&self) -> Result<f64>;

    /// maxShareRatio method
    #[zbus(name = "maxShareRatio")]
    fn max_share_ratio(&self) -> Result<f64>;

    /// maxUploadSpeed method
    #[zbus(name = "maxUploadSpeed")]
    fn max_upload_speed(&self) -> Result<u32>;

    /// name method
    #[zbus(name = "name")]
    fn name(&self) -> Result<String>;

    /// onlyApplyOnNewTorrents method
    #[zbus(name = "onlyApplyOnNewTorrents")]
    fn only_apply_on_new_torrents(&self) -> Result<bool>;

    /// setDefaultMoveOnCompletionLocation method
    #[zbus(name = "setDefaultMoveOnCompletionLocation")]
    fn set_default_move_on_completion_location(&self, dir: &str) -> Result<()>;

    /// setDefaultSaveLocation method
    #[zbus(name = "setDefaultSaveLocation")]
    fn set_default_save_location(&self, dir: &str) -> Result<()>;

    /// setMaxDownloadSpeed method
    #[zbus(name = "setMaxDownloadSpeed")]
    fn set_max_download_speed(&self, speed: u32) -> Result<()>;

    /// setMaxSeedTime method
    #[zbus(name = "setMaxSeedTime")]
    fn set_max_seed_time(&self, hours: f64) -> Result<()>;

    /// setMaxShareRatio method
    #[zbus(name = "setMaxShareRatio")]
    fn set_max_share_ratio(&self, ratio: f64) -> Result<()>;

    /// setMaxUploadSpeed method
    #[zbus(name = "setMaxUploadSpeed")]
    fn set_max_upload_speed(&self, speed: u32) -> Result<()>;

    /// setOnlyApplyOnNewTorrents method
    #[zbus(name = "setOnlyApplyOnNewTorrents")]
    fn set_only_apply_on_new_torrents(&self, on: bool) -> Result<()>;
}
